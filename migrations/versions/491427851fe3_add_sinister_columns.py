"""add sinister columns

Revision ID: 491427851fe3
Revises: ff7c393d73b4
Create Date: 2023-08-09 17:15:34.529726

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '491427851fe3'
down_revision = 'ff7c393d73b4'
branch_labels = None
depends_on = None


def upgrade() -> None:
    sinisterstatusenum = postgresql.ENUM('OPEN', 'COMPLETED', 'CANCELLED', 'APPOINTMENT_ASSIGNED',
                                         'ARCHIVED', 'AUDITED', 'RETAINED', 'CREATED', 'WAITING', 'CLOSED',
                                         name='sinisterstatusenum')
    sinisterstatusenum.create(op.get_bind())

    sinistertypeenum = postgresql.ENUM(
        'CATASTROPHE', 'COLITION', 'FIRE', 'ROBBERY', 'VANDALISM', 'WINDOW_LOCK', name='sinistertypeenum')
    sinistertypeenum.create(op.get_bind())

    sinisterplaceenum = postgresql.ENUM(
        'HIGHWAY', 'AVENUE', 'STREET', 'INTERSECTION', 'OTHER', 'ROUTE', name='sinisterplaceenum')
    sinisterplaceenum.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sinisters', sa.Column('status', sa.Enum('OPEN', 'COMPLETED', 'CANCELLED',
                                                           'APPOINTMENT_ASSIGNED', 'ARCHIVED', 'AUDITED', 'RETAINED', 'CREATED',
                                                           'WAITING', 'CLOSED', name='sinisterstatusenum'), nullable=False))
    op.add_column('sinisters', sa.Column(
        'details_damage', sa.String(), nullable=True))
    op.add_column('sinisters', sa.Column(
        'details_event', sa.String(), nullable=True))
    op.add_column('sinisters', sa.Column('type', sa.Enum('CATASTROPHE', 'COLITION', 'FIRE',
                  'ROBBERY', 'VANDALISM', 'WINDOW_LOCK', name='sinistertypeenum'), nullable=False))
    op.add_column('sinisters', sa.Column('place', sa.Enum('HIGHWAY', 'AVENUE', 'STREET',
                  'INTERSECTION', 'OTHER', 'ROUTE', name='sinisterplaceenum'), nullable=False))
    op.add_column('sinisters', sa.Column('zone', sa.String(), nullable=True))
    op.drop_column('sinisters', 'details')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sinisters', sa.Column(
        'details', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('sinisters', 'zone')
    op.drop_column('sinisters', 'place')
    op.drop_column('sinisters', 'type')
    op.drop_column('sinisters', 'details_event')
    op.drop_column('sinisters', 'details_damage')
    op.drop_column('sinisters', 'status')
    # ### end Alembic commands ###
    sinisterstatusenum = postgresql.ENUM('OPEN', 'COMPLETED', 'CANCELLED', 'APPOINTMENT_ASSIGNED',
                                         'ARCHIVED', 'AUDITED', 'RETAINED', 'CREATED', 'WAITING', 'CLOSED',
                                         name='sinisterstatusenum')
    sinisterstatusenum.drop(op.get_bind())
    sinistertypeenum = postgresql.ENUM(
        'CATASTROPHE', 'COLITION', 'FIRE', 'ROBBERY', 'VANDALISM', 'WINDOW_LOCK', name='sinistertypeenum')
    sinistertypeenum.drop(op.get_bind())
    sinisterplaceenum = postgresql.ENUM(
        'HIGHWAY', 'AVENUE', 'STREET', 'INTERSECTION', 'OTHER', 'ROUTE', name='sinisterplaceenum')
    sinisterplaceenum.drop(op.get_bind())
