"""add approver user & approved status

Revision ID: 84c970d60848
Revises: 9dce9562c103
Create Date: 2023-08-28 15:40:56.481520

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '84c970d60848'
down_revision = '9dce9562c103'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('requests', sa.Column(
        'approver_user_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'requests', 'users', [
                          'approver_user_id'], ['id'])
    op.add_column('sinisters', sa.Column(
        'approver_user_id', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'sinisters', 'users', [
                          'approver_user_id'], ['id'])
    # ### end Alembic commands ###

    # AGREGAMOS 'APPROVED' AL ENUM DE ESTADOS
    op.execute(
        "ALTER TYPE requeststatusenum ADD VALUE IF NOT EXISTS 'APPROVED';")
    op.execute(
        "ALTER TYPE sinisterstatusenum ADD VALUE IF NOT EXISTS 'APPROVED';")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sinisters', type_='foreignkey')
    op.drop_column('sinisters', 'approver_user_id')
    op.drop_constraint(None, 'requests', type_='foreignkey')
    op.drop_column('requests', 'approver_user_id')
    # ### end Alembic commands ###

    # Revertir valores en REQUEST STATUS
    # 1. Crear nuevo tipo temporal
    op.execute("CREATE TYPE requeststatusenum_old AS ENUM ('OPEN', 'COMPLETED', 'CANCELLED', 'APPOINTMENT_ASSIGNED', "
               "'ARCHIVED', 'AUDITED', 'RETAINED', 'CREATED', 'WAITING', 'CLOSED');")

    # 2. Cambiar valores viejos por los nuevos en los registros existentes
    op.execute(
        "UPDATE requests SET status = 'WAITING' WHERE status = 'APPROVED';")

    # 3. Cambiar el tipo de la columna en la tabla
    op.execute(
        "ALTER TABLE requests \
        ALTER COLUMN status \
        TYPE requeststatusenum_old \
        USING (status::text::requeststatusenum_old);"
    )

    # 4. Eliminar tipo viejo
    op.execute("DROP TYPE requeststatusenum;")

    # 5. Renombrar tipo nuevo
    op.execute(
        "ALTER TYPE requeststatusenum_old RENAME TO requeststatusenum;")

    # Revertir valores en SINISTER STATUS
    # 1. Crear nuevo tipo temporal
    op.execute("CREATE TYPE sinisterstatusenum_old AS ENUM ('OPEN', 'COMPLETED', 'CANCELLED', 'APPOINTMENT_ASSIGNED', "
               "'ARCHIVED', 'AUDITED', 'RETAINED', 'CREATED', 'WAITING', 'CLOSED');")

    # 2. Cambiar valores viejos por los nuevos en los registros existentes
    op.execute(
        "UPDATE sinisters SET status = 'WAITING' WHERE status = 'APPROVED';")

    # 3. Cambiar el tipo de la columna en la tabla
    op.execute(
        "ALTER TABLE sinisters \
        ALTER COLUMN status \
        TYPE sinisterstatusenum_old \
        USING (status::text::sinisterstatusenum_old);"
    )

    # 4. Eliminar tipo viejo
    op.execute("DROP TYPE sinisterstatusenum;")

    # 5. Renombrar tipo nuevo
    op.execute(
        "ALTER TYPE sinisterstatusenum_old RENAME TO sinisterstatusenum;")
